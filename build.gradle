/*
 * MIT License
 *
 * Copyright (c) 2017 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

allprojects {
    project.group = 'org.curioswitch.curiostack'

    allprojects {
        afterEvaluate {
            tasks.withType(JavaCompile) {
                // This check is broken in Java 12.  See https://github.com/google/error-prone/issues/1257
                options.errorprone.errorproneArgs = ['-Xep:Finally:OFF']
            }
        }
    }

    plugins.withType(org.gradle.api.publish.maven.plugins.MavenPublishPlugin) {
        project.apply plugin: 'com.jfrog.bintray'
        // This should happen automatically, not clear why not.
        tasks.bintrayUpload.dependsOn tasks.publishToMavenLocal

        def bintrayUser = findProperty('bintray.user')
        def bintrayKey = findProperty('bintray.key')

        afterEvaluate {
            bintray {
                publish = true
                user = bintrayUser
                key = bintrayKey
                pkg {
                    name = project.archivesBaseName
                    repo = 'curiostack'
                    userOrg = 'curioswitch'
                    licenses = ['MIT']
                    vcsUrl = 'https://github.com/curioswitch/curiostack.git'
                    githubRepo = 'curioswitch/curiostack'
                    version {
                        name = project.version
                        gpg {
                            // Use bintray's keys for signing since there isn't much of a difference
                            // in security vs giving them your own private keys - either way bintray
                            // is trusted as the identity provider of your packages.
                            sign = true
                        }
                    }
                }
                publications = publishing.publications.collect { it.name }
            }

            publishing {
                publications.configureEach {publication->
                    artifactId = project.archivesBaseName

                    pom {
                        licenses {
                            license {
                                name = 'MIT License'
                                url = 'https://opensource.org/licenses/MIT'
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                id = 'chokoswitch'
                                name = 'Choko'
                                email = 'choko@curioswitch.org'
                                organization = 'CurioSwitch'
                                organizationUrl = 'https://github.com/curioswitch/curiostack'
                            }
                        }

                        scm {
                            connection = 'scm:git:git://github.com/curioswitch/curiostack.git'
                            developerConnection = 'scm:git:ssh://github.com:curioswitch/curiostack.git'
                            url = 'https://github.com/curioswitch/curiostack'
                        }
                    }
                }
            }
        }
    }
}

gcloud {
    clusterBaseName = 'curioswitch'
    clusterName = 'curioswitch-cluster-jp'
    cloudRegion = 'asia-northeast1'
}

ci {
    releaseTagPrefixes {
        register('RELEASE_SERVERS_') {
            project(':auth:server')
            project(':eggworld:server')
        }
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

tasks.named('yarn').configure {
    // Hack to make sure yarn symlinks are set up after building the base packages.
    finalizedBy ':eggworld:client:web:install'
}
