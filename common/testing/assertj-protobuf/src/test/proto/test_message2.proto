/*
 * MIT License
 *
 * Copyright (c) 2019 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * Copyright (c) 2018 Google, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package org.curioswitch.common.testing.assertj.proto;

option java_package = "org.curioswitch.common.testing.assertj.proto";
option java_multiple_files = true;

// For brevity: o_ means 'optional', r_ means 'repeated'

// This file must be kept in sync with test_message3.proto for tests to work.
// Field names and field numbers should all match. Features supported in one
// syntax but not the other are commented out in the other file.

message TestMessage2 {
  enum TestEnum2 {
    DEFAULT = 0;
    ONE = 1;
    TWO = 2;
  }

  optional int32 o_int = 1;
  repeated string r_string = 2;
  optional int64 o_long_defaults_to_42 = 3 [default = 42];
  optional TestEnum2 o_enum = 4;
  optional float o_float = 5;
  optional float o_float2 = 6;
  optional double o_double = 7;
  optional double o_double2 = 8;

  optional RequiredStringMessage2 o_required_string_message = 9;
  repeated RequiredStringMessage2 r_required_string_message = 10;
  optional TestMessage2 o_test_message = 11;
  repeated TestMessage2 r_test_message = 12;
  optional SubTestMessage2 o_sub_test_message = 13;
  repeated SubTestMessage2 r_sub_test_message = 14;
  map<string, TestMessage2> test_message_map = 15;
}

message RequiredStringMessage2 {
  required string required_string = 1;
}

message SubTestMessage2 {
  optional int32 o_int = 1;
  repeated string r_string = 2;
  optional float o_float = 3;
  optional double o_double = 4;

  optional TestMessage2 o_test_message = 5;
  optional SubSubTestMessage2 o_sub_sub_test_message = 6;
}

message SubSubTestMessage2 {
  optional int32 o_int = 1;
  repeated string r_string = 2;
  optional float o_float = 3;
  optional double o_double = 4;
}
