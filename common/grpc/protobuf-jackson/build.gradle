/*
 * MIT License
 *
 * Copyright (c) 2017 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'java-library'
apply plugin: 'maven-publish'

apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'org.curioswitch.gradle-protobuf-plugin'

archivesBaseName = 'protobuf-jackson'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Not clear why this doesn't happen automatically with the configuration extension.
tasks.compileJmhJava.dependsOn tasks.compileTestJava
configurations.jmh.extendsFrom configurations.testRuntimeClasspath
jmh {
    exclude = '.*FieldDispatchBenchmark.*'
    warmupIterations = 30
    iterations = 10
    fork = 5
    profilers = []
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.7.1'
    }

    descriptorSetOptions.enabled = false
    descriptorSetOptions.path = file('build/unused-descriptor-set')
}

dependencies {
    api 'com.fasterxml.jackson.core:jackson-core'
    api 'com.google.protobuf:protobuf-java'

    implementation 'com.google.protobuf:protobuf-java-util'
    implementation 'net.bytebuddy:byte-buddy'

    testImplementation 'org.curioswitch.curiostack:curio-testing-framework:0.0.6'
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'protobuf-jackson'
                description = 'A library for efficient marshalling of Protocol Buffer messages ' +
                        'to and from JSON.'
                url = 'https://github.com/curioswitch/curiostack/tree/master/' +
                        'common/grpc/protobuf-jackson'
            }
        }
    }
}
