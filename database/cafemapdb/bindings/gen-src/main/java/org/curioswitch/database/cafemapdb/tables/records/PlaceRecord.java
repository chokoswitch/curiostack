/*
 * MIT License
 *
 * Copyright (c) 2019 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * This file is generated by jOOQ.
 */
package org.curioswitch.database.cafemapdb.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.curioswitch.database.cafemapdb.tables.Place;
import org.curioswitch.database.cafemapdb.tables.interfaces.IPlace;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaceRecord extends UpdatableRecordImpl<PlaceRecord> implements Record8<ULong, String, Double, Double, String, String, LocalDateTime, LocalDateTime>, IPlace {

    private static final long serialVersionUID = 241923443;

    /**
     * Setter for <code>cafemapdb.place.id</code>.
     */
    public PlaceRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.id</code>.
     */
    @Override
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>cafemapdb.place.name</code>.
     */
    public PlaceRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cafemapdb.place.latitude</code>.
     */
    public PlaceRecord setLatitude(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.latitude</code>.
     */
    @Override
    public Double getLatitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>cafemapdb.place.longitude</code>.
     */
    public PlaceRecord setLongitude(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.longitude</code>.
     */
    @Override
    public Double getLongitude() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>cafemapdb.place.instagram_id</code>.
     */
    public PlaceRecord setInstagramId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.instagram_id</code>.
     */
    @Override
    public String getInstagramId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cafemapdb.place.google_place_id</code>.
     */
    public PlaceRecord setGooglePlaceId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.google_place_id</code>.
     */
    @Override
    public String getGooglePlaceId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cafemapdb.place.created_at</code>.
     */
    public PlaceRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cafemapdb.place.updated_at</code>.
     */
    public PlaceRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>cafemapdb.place.updated_at</code>.
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, String, Double, Double, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, String, Double, Double, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return Place.PLACE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Place.PLACE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Place.PLACE.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Place.PLACE.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Place.PLACE.INSTAGRAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Place.PLACE.GOOGLE_PLACE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return Place.PLACE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return Place.PLACE.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getInstagramId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getGooglePlaceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getInstagramId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getGooglePlaceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value3(Double value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value4(Double value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value5(String value) {
        setInstagramId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value6(String value) {
        setGooglePlaceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlaceRecord values(ULong value1, String value2, Double value3, Double value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IPlace from) {
        setId(from.getId());
        setName(from.getName());
        setLatitude(from.getLatitude());
        setLongitude(from.getLongitude());
        setInstagramId(from.getInstagramId());
        setGooglePlaceId(from.getGooglePlaceId());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlaceRecord
     */
    public PlaceRecord() {
        super(Place.PLACE);
    }

    /**
     * Create a detached, initialised PlaceRecord
     */
    public PlaceRecord(ULong id, String name, Double latitude, Double longitude, String instagramId, String googlePlaceId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Place.PLACE);

        set(0, id);
        set(1, name);
        set(2, latitude);
        set(3, longitude);
        set(4, instagramId);
        set(5, googlePlaceId);
        set(6, createdAt);
        set(7, updatedAt);
    }
}
