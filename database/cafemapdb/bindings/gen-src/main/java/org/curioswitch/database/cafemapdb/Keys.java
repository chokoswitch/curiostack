/*
 * This file is generated by jOOQ.
 */
package org.curioswitch.database.cafemapdb;


import javax.annotation.Generated;

import org.curioswitch.database.cafemapdb.tables.FlywaySchemaHistory;
import org.curioswitch.database.cafemapdb.tables.Place;
import org.curioswitch.database.cafemapdb.tables.records.FlywaySchemaHistoryRecord;
import org.curioswitch.database.cafemapdb.tables.records.PlaceRecord;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>cafemapdb</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PlaceRecord, ULong> IDENTITY_PLACE = Identities0.IDENTITY_PLACE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = UniqueKeys0.KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY;
    public static final UniqueKey<PlaceRecord> KEY_PLACE_PRIMARY = UniqueKeys0.KEY_PLACE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PlaceRecord, ULong> IDENTITY_PLACE = Internal.createIdentity(Place.PLACE, Place.PLACE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "KEY_flyway_schema_history_PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<PlaceRecord> KEY_PLACE_PRIMARY = Internal.createUniqueKey(Place.PLACE, "KEY_place_PRIMARY", Place.PLACE.ID);
    }
}
