/*
 * MIT License
 *
 * Copyright (c) 2019 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * This file is generated by jOOQ.
 */
package org.curioswitch.database.cafemapdb;


import javax.annotation.processing.Generated;

import org.curioswitch.database.cafemapdb.tables.FlywaySchemaHistory;
import org.curioswitch.database.cafemapdb.tables.Landmark;
import org.curioswitch.database.cafemapdb.tables.Place;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>cafemapdb</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index FLYWAY_SCHEMA_HISTORY_FLYWAY_SCHEMA_HISTORY_S_IDX = Indexes0.FLYWAY_SCHEMA_HISTORY_FLYWAY_SCHEMA_HISTORY_S_IDX;
    public static final Index FLYWAY_SCHEMA_HISTORY_PRIMARY = Indexes0.FLYWAY_SCHEMA_HISTORY_PRIMARY;
    public static final Index LANDMARK_GOOGLE_PLACE_ID = Indexes0.LANDMARK_GOOGLE_PLACE_ID;
    public static final Index LANDMARK_PRIMARY = Indexes0.LANDMARK_PRIMARY;
    public static final Index PLACE_IDX_INSTAGRAM_ID = Indexes0.PLACE_IDX_INSTAGRAM_ID;
    public static final Index PLACE_PRIMARY = Indexes0.PLACE_PRIMARY;
    public static final Index PLACE_S2_CELL = Indexes0.PLACE_S2_CELL;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index FLYWAY_SCHEMA_HISTORY_FLYWAY_SCHEMA_HISTORY_S_IDX = Internal.createIndex("flyway_schema_history_s_idx", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, new OrderField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS }, false);
        public static Index FLYWAY_SCHEMA_HISTORY_PRIMARY = Internal.createIndex("PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, new OrderField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static Index LANDMARK_GOOGLE_PLACE_ID = Internal.createIndex("google_place_id", Landmark.LANDMARK, new OrderField[] { Landmark.LANDMARK.GOOGLE_PLACE_ID }, true);
        public static Index LANDMARK_PRIMARY = Internal.createIndex("PRIMARY", Landmark.LANDMARK, new OrderField[] { Landmark.LANDMARK.ID }, true);
        public static Index PLACE_IDX_INSTAGRAM_ID = Internal.createIndex("idx_instagram_id", Place.PLACE, new OrderField[] { Place.PLACE.INSTAGRAM_ID }, true);
        public static Index PLACE_PRIMARY = Internal.createIndex("PRIMARY", Place.PLACE, new OrderField[] { Place.PLACE.ID }, true);
        public static Index PLACE_S2_CELL = Internal.createIndex("s2_cell", Place.PLACE, new OrderField[] { Place.PLACE.S2_CELL }, false);
    }
}
