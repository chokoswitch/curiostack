/*
 * This file is generated by jOOQ.
 */
package org.curioswitch.database.cafemapdb.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.processing.Generated;

import org.curioswitch.database.cafemapdb.tables.Place;
import org.curioswitch.database.cafemapdb.tables.records.PlaceRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaceDao extends DAOImpl<PlaceRecord, org.curioswitch.database.cafemapdb.tables.pojos.Place, ULong> {

    /**
     * Create a new PlaceDao without any configuration
     */
    public PlaceDao() {
        super(Place.PLACE, org.curioswitch.database.cafemapdb.tables.pojos.Place.class);
    }

    /**
     * Create a new PlaceDao with an attached configuration
     */
    public PlaceDao(Configuration configuration) {
        super(Place.PLACE, org.curioswitch.database.cafemapdb.tables.pojos.Place.class, configuration);
    }

    @Override
    public ULong getId(org.curioswitch.database.cafemapdb.tables.pojos.Place object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Place.PLACE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchById(ULong... values) {
        return fetch(Place.PLACE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.curioswitch.database.cafemapdb.tables.pojos.Place fetchOneById(ULong value) {
        return fetchOne(Place.PLACE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Place.PLACE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByName(String... values) {
        return fetch(Place.PLACE.NAME, values);
    }

    /**
     * Fetch records that have <code>latitude BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfLatitude(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Place.PLACE.LATITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByLatitude(Double... values) {
        return fetch(Place.PLACE.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfLongitude(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Place.PLACE.LONGITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByLongitude(Double... values) {
        return fetch(Place.PLACE.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>s2_cell BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfS2Cell(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Place.PLACE.S2_CELL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>s2_cell IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByS2Cell(ULong... values) {
        return fetch(Place.PLACE.S2_CELL, values);
    }

    /**
     * Fetch records that have <code>instagram_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfInstagramId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Place.PLACE.INSTAGRAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>instagram_id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByInstagramId(String... values) {
        return fetch(Place.PLACE.INSTAGRAM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>instagram_id = value</code>
     */
    public org.curioswitch.database.cafemapdb.tables.pojos.Place fetchOneByInstagramId(String value) {
        return fetchOne(Place.PLACE.INSTAGRAM_ID, value);
    }

    /**
     * Fetch records that have <code>google_place_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfGooglePlaceId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Place.PLACE.GOOGLE_PLACE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>google_place_id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByGooglePlaceId(String... values) {
        return fetch(Place.PLACE.GOOGLE_PLACE_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Place.PLACE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Place.PLACE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Place.PLACE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Place.PLACE.UPDATED_AT, values);
    }
}
