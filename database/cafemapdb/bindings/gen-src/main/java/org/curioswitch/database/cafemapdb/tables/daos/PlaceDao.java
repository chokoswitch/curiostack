/*
 * MIT License
 *
 * Copyright (c) 2019 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * This file is generated by jOOQ.
 */
package org.curioswitch.database.cafemapdb.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.curioswitch.database.cafemapdb.tables.Place;
import org.curioswitch.database.cafemapdb.tables.records.PlaceRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaceDao extends DAOImpl<PlaceRecord, org.curioswitch.database.cafemapdb.tables.pojos.Place, ULong> {

    /**
     * Create a new PlaceDao without any configuration
     */
    public PlaceDao() {
        super(Place.PLACE, org.curioswitch.database.cafemapdb.tables.pojos.Place.class);
    }

    /**
     * Create a new PlaceDao with an attached configuration
     */
    public PlaceDao(Configuration configuration) {
        super(Place.PLACE, org.curioswitch.database.cafemapdb.tables.pojos.Place.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(org.curioswitch.database.cafemapdb.tables.pojos.Place object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchById(ULong... values) {
        return fetch(Place.PLACE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.curioswitch.database.cafemapdb.tables.pojos.Place fetchOneById(ULong value) {
        return fetchOne(Place.PLACE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByName(String... values) {
        return fetch(Place.PLACE.NAME, values);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByLatitude(Double... values) {
        return fetch(Place.PLACE.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByLongitude(Double... values) {
        return fetch(Place.PLACE.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>s2_cell IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByS2Cell(ULong... values) {
        return fetch(Place.PLACE.S2_CELL, values);
    }

    /**
     * Fetch records that have <code>instagram_id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByInstagramId(String... values) {
        return fetch(Place.PLACE.INSTAGRAM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>instagram_id = value</code>
     */
    public org.curioswitch.database.cafemapdb.tables.pojos.Place fetchOneByInstagramId(String value) {
        return fetchOne(Place.PLACE.INSTAGRAM_ID, value);
    }

    /**
     * Fetch records that have <code>google_place_id IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByGooglePlaceId(String... values) {
        return fetch(Place.PLACE.GOOGLE_PLACE_ID, values);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Place.PLACE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.curioswitch.database.cafemapdb.tables.pojos.Place> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Place.PLACE.UPDATED_AT, values);
    }
}
